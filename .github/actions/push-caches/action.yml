name: Update caches & artifacts
description: some more complex push-caches - pip & hf

inputs:
  pypi-dir:
    description: location of local PyPI cache
    required: false
    default: "_ci-cache_PyPI"
  pypi-key:
    description: cache restore/dump key
    required: false
    default: "pypi-packages"
  torch-url:
    description: location to pull PyTorch from
    required: false
    default: "https://download.pytorch.org/whl/cpu/torch_stable.html"

runs:
  using: "composite"
  steps:
    - name: install dev. env
      run: pip install -q setuptools wheel
      shell: bash

    - name: Freeze local emv.
      run: |
        pip freeze > requirements.dump
        cat requirements.dump
      shell: bash

    #- name: Filter self pkg
    #  run: |
    #    import os
    #    fp = 'requirements.dump'
    #    with open(fp) as fopen:
    #      lines = [ln.strip() for ln in fopen.readlines()]
    #    lines = [ln.split('+')[0] for ln in lines if '-e ' not in ln]
    #    with open(fp, 'w') as fwrite:
    #      fwrite.writelines([ln + os.linesep for ln in lines])
    #  shell: python

    - name: Dump wheels
      run: |
        pip wheel -r requirements/_devel.txt --prefer-binary \
          --wheel-dir=.pip-wheels \
          -f ${{ inputs.torch-url }} -f ${{ inputs.pypi-dir }}
        ls -lh .pip-wheels
      shell: bash

    - name: Cache pull
      uses: actions/cache/restore@v3
      with:
        path: ${{ inputs.pypi-dir }}
        key: ${{ inputs.pypi-key }}

    - name: Find diff
      id: wheels-diff
      run: |
        import os, glob
        wheels = [os.path.basename(p) for p in glob.glob(".pip-wheels/*")]
        pkgs = [os.path.basename(p) for p in glob.glob("${{ inputs.pypi-dir }}/*")]
        diff = [w for w in wheels if w not in pkgs]
        print(diff)
        with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
            print(f'count-new={len(diff)}', file=fh)
      shell: python

    - run: cp .pip-wheels/* ${{ inputs.pypi-dir }}
      if: ${{ steps.wheels-diff.outputs.count-new != 0 }}
      shell: bash

    - name: Cache push
      if: ${{ steps.wheels-diff.outputs.count-new != 0 }}
      uses: actions/cache/save@v3
      with:
        path: ${{ inputs.pypi-dir }}
        key: ${{ inputs.pypi-key }}

    - name: Post PT
      if: ${{ runner.os == 'Linux' }}
      run: |
        printf "list $TORCH_HOME:\n"
        tree -h $TORCH_HOME
      shell: bash

    - name: Cache Torch
      continue-on-error: true
      uses: actions/cache/save@v3
      with:
        path: ${{ env.TORCH_HOME }}
        key: cache-pytorch

    - name: Post HF
      run: |
        printf "list $TRANSFORMERS_CACHE:\n"
        ls -lh $TRANSFORMERS_CACHE
      shell: bash

    - name: Cache HF
      continue-on-error: true
      uses: actions/cache/save@v3
      with:
        path: ${{ env.TRANSFORMERS_CACHE }}
        key: cache-transformers
